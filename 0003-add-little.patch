From 7e4726119115a66051a71a086756b3b64c2ad7d4 Mon Sep 17 00:00:00 2001
From: luquanhong <quanhong.lqh@alibaba-inc.com>
Date: Fri, 2 Sep 2016 18:36:08 +0800
Subject: [PATCH 3/3] add little

Change-Id: I239273799bfe4da5ff8e8f15a5183b5b9b2b6d97
---
 r2/d2/android/inc/AndroidJavaMediaCodec.h          |  2 ++
 r2/d2/android/src/AndroidJavaMediaCodec.cpp        | 41 +++++++++++++++-------
 r2/r2/inc/DLManager.h                              |  2 +-
 r2/r2/inc/FFmpegDataSource.h                       | 11 ++++++
 r2/r2/inc/FFmpegMediaTrack.h                       |  2 ++
 r2/r2/inc/MediaDataSource.h                        |  7 ++++
 r2/r2/inc/MediaPlayer.h                            |  1 +
 r2/r2/src/DefaultVideoPlayer.cpp                   |  2 +-
 r2/r2/src/FFmpegDataSource.cpp                     | 24 ++++++++++---
 r2/r2/src/FFmpegMediaTrack.cpp                     | 16 ++++++---
 r2/r2/src/MediaPlayer.cpp                          | 14 ++++++++
 r2/r2/src/download/DLAssetWriter.cpp               | 23 ++++++++++--
 r2/r2/src/download/DLManager.cpp                   | 14 +++++---
 .../jni/com_UCMobile_Apollo_MediaPlayer.cpp        |  9 +++--
 sdk-android/ApolloSDKTest/app/app.iml              |  6 ----
 .../com/example/videoviewtest/MainActivity.java    |  4 +--
 16 files changed, 136 insertions(+), 42 deletions(-)

diff --git a/r2/d2/android/inc/AndroidJavaMediaCodec.h b/r2/d2/android/inc/AndroidJavaMediaCodec.h
index a42bc8f..e55a131 100755
--- a/r2/d2/android/inc/AndroidJavaMediaCodec.h
+++ b/r2/d2/android/inc/AndroidJavaMediaCodec.h
@@ -164,6 +164,8 @@ private:
     static bool _isTimeoutException;
     bool _isMediaCodecBlocked;
     bool _isNeedReconfigure;
+
+    bool _isFisrtFrameRender;
 }; 
 
 
diff --git a/r2/d2/android/src/AndroidJavaMediaCodec.cpp b/r2/d2/android/src/AndroidJavaMediaCodec.cpp
index 9a372c7..c1087da 100755
--- a/r2/d2/android/src/AndroidJavaMediaCodec.cpp
+++ b/r2/d2/android/src/AndroidJavaMediaCodec.cpp
@@ -8,6 +8,9 @@
 #define DEBUG_DECODE 0
 #define TRY_MAX_COUNT 5
 
+extern bool seekMark;
+
+
 namespace d2{
 
 using namespace r2;
@@ -40,6 +43,7 @@ AndroidJavaMediaCodec::AndroidJavaMediaCodec(AVCodecContext* context, jobject su
                 , _isFlushed(false)
                 , _isMediaCodecBlocked(false)
 				, _isNeedReconfigure(false)
+				, _isFisrtFrameRender(false)
 {
     Logger::i("AndroidJavaMediaCodec","AndroidJavaMediaCodec %p", this);
 	_mMediaCodec = new AndroidJavaMediaCodecJni(_mContext);
@@ -270,9 +274,11 @@ int AndroidJavaMediaCodec::stop()
     if (_isStopped == true) return 0;
 
     _isPrepared = false;
-    _isStarted = false;
+    /*_isStarted = false;*/
     _isStopped = true;
 
+    _isFisrtFrameRender = false;
+
     int ret = 0;
     if (!_isMediaCodecBlocked) { 
         if ( (ret = _mMediaCodec->stopInThread()) < 0) {
@@ -332,6 +338,13 @@ void AndroidJavaMediaCodec::render(int index, bool render)
             //_isException = true;
             return;
         }
+
+        if (_isFisrtFrameRender == false) {
+            Logger::e("AndroidJavaMediaCodec", "%s render first \n", __FUNCTION__);
+            _isFisrtFrameRender = true;
+            
+        }
+            
     } else {
         Logger::d(TAG, "%s enter index = %d _isException = %s _isFlushed = %s no need render\n", __FUNCTION__, 
                                            index,  _isException?"true":"false", _isFlushed?"true":"false");
@@ -341,7 +354,7 @@ void AndroidJavaMediaCodec::render(int index, bool render)
 int AndroidJavaMediaCodec::decode(AVPacket* pPacket, int64_t time, MediaCodecBufferInfo * buffer_info, bool key)
 {
     if (key == true) {
-#if DEBUG_DECODE
+#if 1 //DEBUG_DECODE
         Logger::i(TAG, "%s entry key = %s iSize = %d, \n", __FUNCTION__,key?"true":"false", pPacket->size);
 #endif
         _surfaceChanged = false;
@@ -357,7 +370,7 @@ int AndroidJavaMediaCodec::decode(AVPacket* pPacket, int64_t time, MediaCodecBuf
 
 int AndroidJavaMediaCodec::decode(uint8_t *pData, int iSize, int64_t time, MediaCodecBufferInfo* buffer_info)
 { 
-#if DEBUG_DECODE
+#if 1//DEBUG_DECODE
     Logger::e(TAG, "%s entry _isStarted = %s iSize = %d, \n", __FUNCTION__,_isStarted?"true":"false", iSize);
 #endif
 
@@ -370,19 +383,19 @@ int AndroidJavaMediaCodec::decode(uint8_t *pData, int iSize, int64_t time, Media
 
     if (!_mMediaCodec) 
         return MC_API_ERROR;
-    
-	if (_isNeedReconfigure) {
-        reconfigureMediaCodec();
-        _isNeedReconfigure = false;
-    }
+
+    if (_isNeedReconfigure) {
+            reconfigureMediaCodec();
+            _isNeedReconfigure = false;
+        }
     
     int ret;
     uint32_t queue_flags = 0;
     H264ConvertState convert_state = {0, 0};
 
-    if (isStart == false || _isStopped == true || _surfaceChanged == true || (_platformData && _platformData->getSurface() == NULL) ) { 
+    if (isStart == false || _isStopped == true /*|| _surfaceChanged == true*/ || (_platformData && _platformData->getSurface() == NULL) ) { 
         //TODO Jack : sometimes, change page will change surface, but not call setSurface, so it maybe caused crash,
-#if DEBUG_DECODE
+#if 1 //DEBUG_DECODE
         Logger::d(TAG, "%s waiting _isStopped = %s isStart = %s _isException = %s _surfaceChanged= %s\n", __FUNCTION__, 
                            _isStopped?"true":"false", isStart?"true":"false", _isException?"true":"false", _surfaceChanged?"true":"false");
 #endif
@@ -396,9 +409,11 @@ int AndroidJavaMediaCodec::decode(uint8_t *pData, int iSize, int64_t time, Media
         return MC_API_EXCEPTION;    
     } else {
 
+        
+
         if (_isFirstDequeueOutput) {
             _timeUS = OutputFirstTimeoutUS;
-        } else if (_surfaceChanged == true ||  _isPrepared == false) {
+        } else if (/*_surfaceChanged == true ||*/  _isPrepared == false) {
             _timeUS = OutputPreparedTimeoutUS;
         } else {
             _timeUS = OutputTimeoutUS;
@@ -417,7 +432,7 @@ int AndroidJavaMediaCodec::decode(uint8_t *pData, int iSize, int64_t time, Media
         
         //Logger::d(TAG, "AndroidJavaMediaCodec::drainOutputBuffer dequeueOutput %d", mOutputIndex);
 
-        if (mOutputIndex >=0 && (buffer_info->presentationTimeUs == 0 || _surfaceChanged == true ) ) { /* TODO Jack:: sometimes the dts not equal 0 when it's input dts is 0, it's exception*/
+        if (mOutputIndex >=0 && (buffer_info->presentationTimeUs == 0 /*|| _surfaceChanged == true*/ ) ) { /* TODO Jack:: sometimes the dts not equal 0 when it's input dts is 0, it's exception*/
             Logger::d(TAG, "presentationTimeUs == 0 mOutputIndex = %d\n", mOutputIndex);
 
             ret = _mMediaCodec->releaseOutput(mOutputIndex, _isPreload?true:false); // TODO Jack :: for onPostKeyFrame
@@ -517,7 +532,7 @@ void AndroidJavaMediaCodec::reconfigureMediaCodec()
     jobject surface = _platformData->getSurface();
 
     Logger::d(TAG, " %s setPlatformData surface =%p _mSurface = %p\n",__FUNCTION__, surface, _mSurface);
-    if ( _mSurface == surface ) {
+    if ( _mSurface == surface && !_isStopped ) {
         // do nothing
     } else if (surface != NULL ){
      
diff --git a/r2/r2/inc/DLManager.h b/r2/r2/inc/DLManager.h
index 2aae0d1..b9c400d 100755
--- a/r2/r2/inc/DLManager.h
+++ b/r2/r2/inc/DLManager.h
@@ -35,7 +35,7 @@
 #define CACHE_MOOV 0
 #define CACHE_HTTP_TIMEOUT_US 20000000// 20s
 #define CACHE_READ_TIMEOUT_US 50000000 //50s
-#define CACHE_READ_WAIT_US    500000 //500 ms
+#define CACHE_READ_WAIT_US    100000 //500 ms
 #define CACHE_LOCK_PER_WAIT_US    200000 //200ms
 #define CACHE_LOCK_WAIT_US        1000000 //1s
 
diff --git a/r2/r2/inc/FFmpegDataSource.h b/r2/r2/inc/FFmpegDataSource.h
index 1e81bbd..2681d17 100644
--- a/r2/r2/inc/FFmpegDataSource.h
+++ b/r2/r2/inc/FFmpegDataSource.h
@@ -199,6 +199,14 @@ public:
         return 0;
     }
 
+    virtual void setSurfaceSeek(bool value){
+        _surfaceSeek = value;
+    }
+
+    virtual bool isSurfaceSeek(){
+        return _surfaceSeek;
+    }
+
 public:
     /**
        *  FFmpeg needs a global iniitailization
@@ -515,6 +523,9 @@ public:
     RetryStrategy getRetryStrategy(int retryCount);
     void* _platformData;
     Mutex _lock;
+
+    bool  _surfaceSeek;
+    
 }; // class FFmpegDataSource
 
 } // namespace r2
diff --git a/r2/r2/inc/FFmpegMediaTrack.h b/r2/r2/inc/FFmpegMediaTrack.h
index c2e4880..e2b88cc 100755
--- a/r2/r2/inc/FFmpegMediaTrack.h
+++ b/r2/r2/inc/FFmpegMediaTrack.h
@@ -89,6 +89,7 @@ public:
 #ifdef ENABLE_MEDIACODEC
         , _seeking(false)
         , _isVideoEOF(false)
+        , _isPlaying(false)
 #endif
         , _isSupportMediaCodec(false)
         , _platformData(0)
@@ -347,6 +348,7 @@ private:
 #ifdef ENABLE_MEDIACODEC
     bool _seeking;
     bool _isVideoEOF;
+    bool _isPlaying;
 #endif
 }; // class FFmpegMediaTrack
 
diff --git a/r2/r2/inc/MediaDataSource.h b/r2/r2/inc/MediaDataSource.h
index 210762b..3610c4f 100755
--- a/r2/r2/inc/MediaDataSource.h
+++ b/r2/r2/inc/MediaDataSource.h
@@ -31,6 +31,7 @@ public:
         : _dataSourceName(dataSourceName)
         , _mediaPlayer(NULL)
         , _observer(NULL)
+        , _surfaceSeek(false)
     {
     }
 
@@ -157,6 +158,10 @@ public:
 
     virtual string getMetaData(const string &key) { return ""; }
 
+    virtual void setSurfaceSeek(bool value){}
+
+    virtual bool isSurfaceSeek() {}
+
 
 protected:
     /** The data source name */
@@ -167,6 +172,8 @@ protected:
     normal_ptr<MediaPlayer> _mediaPlayer;
     MediaDataSourceObserver *_observer;
 
+    bool _surfaceSeek;
+
 private:
     MediaDataSource();
     MediaDataSource(const MediaDataSource&);
diff --git a/r2/r2/inc/MediaPlayer.h b/r2/r2/inc/MediaPlayer.h
index 2c45f83..6557547 100755
--- a/r2/r2/inc/MediaPlayer.h
+++ b/r2/r2/inc/MediaPlayer.h
@@ -202,6 +202,7 @@ public:
         _isLowMemDevice = value;
     }
 
+    void seekToCurrentPosition(int64_t timeUs);
 private:
 
     // EndOfStream
diff --git a/r2/r2/src/DefaultVideoPlayer.cpp b/r2/r2/src/DefaultVideoPlayer.cpp
index a783182..b1c07b2 100755
--- a/r2/r2/src/DefaultVideoPlayer.cpp
+++ b/r2/r2/src/DefaultVideoPlayer.cpp
@@ -203,7 +203,7 @@ void DefaultVideoPlayer::onPlay()
             if ( TimedTrackPlayerImpl::isPlaying() )
                 TimedTrackPlayerImpl::postPlayEvent();
             return;
-        }
+        } 
     }
 #endif
 
diff --git a/r2/r2/src/FFmpegDataSource.cpp b/r2/r2/src/FFmpegDataSource.cpp
index e2cdc33..3563735 100755
--- a/r2/r2/src/FFmpegDataSource.cpp
+++ b/r2/r2/src/FFmpegDataSource.cpp
@@ -28,6 +28,8 @@
 #define MAX_RETRY_TIMES 6
 #define IOS_UA "Mozilla/5.0 (iPhone; CPU iPhone OS 7_0 like Mac OS X; en-us) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53"
 
+extern bool seekMark;
+
 
 namespace r2 {
 
@@ -989,9 +991,14 @@ int64_t FFmpegDataSource::getPlayableTimeUs()
 void FFmpegDataSource::checkBufferingState()
 {
     // Not network media OR stop
-    if (!_isNetworkMedia || _interruptBlockingCalls || (!_isBuffering && _endOfStream))
+    if (!_isNetworkMedia || _interruptBlockingCalls || (!_isBuffering && _endOfStream) )
         return;
 
+    if ( isSurfaceSeek()) {
+        //Logger::i(TAG, "_dataSource->isSurfaceSeek true\n");
+        //return;
+    }
+
     refcount_ptr<FFmpegMediaTrack> audioTrack = getSelectedTrack(MediaMetaData::kMetaDataValueTrackTypeAudio);
     refcount_ptr<FFmpegMediaTrack> videoTrack = getSelectedTrack(MediaMetaData::kMetaDataValueTrackTypeVideo);
 
@@ -1105,6 +1112,9 @@ void FFmpegDataSource::checkBufferingState()
     }
 
     if (bufferPercent >= 100) {
+
+        seekMark = false;
+        
         // Adjust buffer size, Whether or not the buffering state
         if (_currentMaxBufferTime == _configFirstBufUs)
             _currentMaxBufferTime = min(_configNextBufUs, _configMaxBufUs);
@@ -1258,7 +1268,10 @@ void FFmpegDataSource::readInternal()
     // Refresh reading packet.
     AVPacket packet;
     av_init_packet(&packet);
+    //Logger::d("FFmpegDataSource", "readInternal 1");
     int rv = av_read_frame(_pFormatContext, &packet);
+    //Logger::d("FFmpegDataSource", "readInternal 2");
+
 
     if (_interruptBlockingCalls) {
         Logger::d(TAG, "_interruptBlockingCalls %d, av_read_frame return %d\n", _interruptBlockingCalls, rv);
@@ -1451,7 +1464,7 @@ bool FFmpegDataSource::isTrackSeekable(size_t trackIndex)
  */
 bool FFmpegDataSource::seekTrackTo(size_t trackIndex, int64_t seekTimeUs, bool wait)
 {
-#if DEBUG
+#if 1//DEBUG
     Logger::d("FFmpegDataSource", "seekTrackTo(%d, %lld). Will queue seek message\n", trackIndex, seekTimeUs);
 #endif
     /*
@@ -1466,6 +1479,7 @@ bool FFmpegDataSource::seekTrackTo(size_t trackIndex, int64_t seekTimeUs, bool w
     //checkBufferingState();
 #endif
 
+    MessageLoop::clearAllMessages();
     refcount_ptr<Message> message = new SeekMessage(this, trackIndex, seekTimeUs);
     MessageLoop::postMessage(message);
 
@@ -1559,7 +1573,7 @@ bool FFmpegDataSource::seekInternal(size_t trackIndex, int64_t seekTimeUs)
     flags = AVSEEK_FLAG_BACKWARD;
 #endif
 
-#ifdef DEBUG
+#if 1//def DEBUG
     Logger::d(TAG, "DataSource: START seek track %lu from %lld to %lld(%lld:%lld). data_offset = %lld, start_time %lld\n",
               trackIndex, buffer ? buffer->getTimeUs() : 0, seekTimeUs, seekTimeUs / 60000000LL, (seekTimeUs / 1000000LL) % 60,
               _pFormatContext->data_offset, _pFormatContext->start_time);
@@ -1570,7 +1584,7 @@ bool FFmpegDataSource::seekInternal(size_t trackIndex, int64_t seekTimeUs)
     seekTimeUs += _pFormatContext->start_time > 0 ? _pFormatContext->start_time : 0;
     int rv = av_seek_frame(_pFormatContext, trackIndex, _tracks[trackIndex]->usValueToTimeBase(seekTimeUs), flags);
 
-#ifdef DEBUG
+#if 1//def DEBUG
     Logger::d(TAG, "DataSource: END seek track %lu from %lld to %lld. rv = %d, data_offset = %lld\n",
               trackIndex, buffer ? buffer->getTimeUs() : 0, seekTimeUs, rv, _pFormatContext->data_offset);
 #endif
@@ -1597,7 +1611,7 @@ bool FFmpegDataSource::seekInternal(size_t trackIndex, int64_t seekTimeUs)
 
     // Remove extra read messages from message queue
     Logger::d(TAG, "FFmpegDataSource::seekInternal clearAllMessage");
-    MessageLoop::clearAllMessages();
+    //MessageLoop::clearAllMessages();
 
     // Put a flush flags buffer into raw queue - this would become 1st
     _queueBufferToAllSelectedTracks(MediaBuffer::createFlushDataMediaBuffer(_lastSeekTime));
diff --git a/r2/r2/src/FFmpegMediaTrack.cpp b/r2/r2/src/FFmpegMediaTrack.cpp
index a162866..279bcd3 100755
--- a/r2/r2/src/FFmpegMediaTrack.cpp
+++ b/r2/r2/src/FFmpegMediaTrack.cpp
@@ -646,6 +646,7 @@ bool FFmpegMediaTrack::play()
 #ifdef ENABLE_MEDIACODEC
     if(_decoder && _isSupportMediaCodec && _pStream->codec->codec_type == AVMEDIA_TYPE_VIDEO){
         _decoder->play();
+        _isPlaying = true;
     }
 #endif
     return true;
@@ -657,6 +658,7 @@ bool FFmpegMediaTrack::pause()
 #ifdef ENABLE_MEDIACODEC
     if(_decoder && _isSupportMediaCodec && _pStream->codec->codec_type == AVMEDIA_TYPE_VIDEO && _seeking == false){
         _decoder->pause();
+        _isPlaying = false;
     }
 #endif
     return true;
@@ -1313,10 +1315,16 @@ void FFmpegMediaTrack::_onDecode()
 
             _decodedBufferQueue.put(decodedBuffer); 
 #ifdef ENABLE_MEDIACODEC            
-             if(decodedBuffer->getFlags() & MediaBuffer::kMediaBufferFlagMediaCodec &&_isVideoEOF == true) {
-                 _isVideoEOF = false;
-                 Logger::d(TAG, "mediacodec _isVideoEOF = true.\n");
-                 break;
+            if(decodedBuffer->getFlags() & MediaBuffer::kMediaBufferFlagMediaCodec &&_isVideoEOF == true) {
+                _isVideoEOF = false;
+                Logger::d(TAG, "mediacodec _isVideoEOF = true.\n");
+                break;
+            } else if ( (decodedBuffer->getFlags() & MediaBuffer::kMediaBufferFlagMediaCodec)  &&  _dataSource->isSurfaceSeek() && _isPlaying){
+                d2::MediaCodecVideoBuffer* mcBuffer = static_cast<d2::MediaCodecVideoBuffer*>(decodedBuffer.get());
+                if (mcBuffer->getIndex() >= 0) {
+                    Logger::i(TAG, " _dataSource->setSurfaceSeek(false)");
+                    _dataSource->setSurfaceSeek(false);
+                }
             }
 #endif
         }
diff --git a/r2/r2/src/MediaPlayer.cpp b/r2/r2/src/MediaPlayer.cpp
index 5999530..f75a176 100755
--- a/r2/r2/src/MediaPlayer.cpp
+++ b/r2/r2/src/MediaPlayer.cpp
@@ -26,6 +26,8 @@
 #include "androidUtils.h"
 #endif
 
+extern bool seekMark;
+
 namespace r2 {
 
 using namespace turbo;
@@ -606,6 +608,7 @@ bool MediaPlayer::pause()
 
     Mutex::AutoLock lock(_lock);
 
+    _dataSource->setSurfaceSeek(false);
     //by mamk
     assertuc(_state.is_set(kMediaPlayerStateInitialized) || _state.is_set(kMediaPlayerStateStarted));
 
@@ -721,6 +724,15 @@ void MediaPlayer::updatePlayDur(int64_t pos, int64_t newStartPos/*=-1*/)
     }
 }
 
+
+void MediaPlayer::seekToCurrentPosition(int64_t timeUs)
+{
+    Logger::i(TAG, "_dataSource->setSurfaceSeek true\n");
+    _dataSource->setSurfaceSeek(true);
+    seekTo(timeUs);
+}
+
+
 bool MediaPlayer::seekTo(int64_t seekTimeUs)
 {
    
@@ -1059,6 +1071,8 @@ void MediaPlayer::_onSeekCompleted(const normal_ptr<MediaTrackPlayer>& trackPlay
         if (_observer)
             _observer->onSeekCompleted();
 
+        //seekMark = false;
+
         _seekCompletePosition = -1;
     } //if
 }
diff --git a/r2/r2/src/download/DLAssetWriter.cpp b/r2/r2/src/download/DLAssetWriter.cpp
index d371242..0649491 100755
--- a/r2/r2/src/download/DLAssetWriter.cpp
+++ b/r2/r2/src/download/DLAssetWriter.cpp
@@ -19,6 +19,7 @@
 using namespace std;
 
 
+extern bool seekMark;
 #ifdef __APPLE__
 // NOTE: iOS use rename rather than sendfile for two reason:
 //    1. sendfile system call is different in iOS.
@@ -674,6 +675,11 @@ int DLAssetWriter::readBuffer(unsigned char* buf, int size)
             return AVERROR_EXIT;
         }
 
+        if (_dataSource->isSurfaceSeek()){
+            Logger::e(TAG, "%s, seekMark interrupted 2, exit\n", __FUNCTION__);
+            return -1;
+        }
+
         if (_errorCode)
             return _errorCode > 0 ? -_errorCode : _errorCode;
             
@@ -686,7 +692,7 @@ int DLAssetWriter::readBuffer(unsigned char* buf, int size)
         }
         
         fileSize = idx->filesize();
-        //Logger::v(TAG, "readBuffer wait, index %s, filesize %lld, pos %lld\n", _curReadIndex.c_str(), fileSize, _readPosition);
+        //Logger::e(TAG, "readBuffer wait, index %s, filesize %lld, pos %lld\n", _curReadIndex.c_str(), fileSize, _readPosition);
         if (fileSize > 0 && _readPosition >= fileSize) //EOF
             return 0;
 
@@ -1395,12 +1401,18 @@ void DLAssetWriter::_onWrite()
             if (idx->segments.size() == 0)
                 continue;
 
-            if(_dataSource && _dataSource->getPrepareStatus() == false) {
+            if(_dataSource && _dataSource->getPrepareStatus() == false ) {
                 // start the disk io after t1
                 _writerMsg = NULL;
                 return;
             }
 
+            if (_dataSource->isSurfaceSeek()) {
+                Logger::e(TAG, "%s, seekMark interrupted 1, exit\n", __FUNCTION__);
+                _writerMsg = NULL;
+                return;
+            }
+
             int64_t ret = _writeAndMerge(it->first);
             
             _initStorageFreeBytes -= ret;
@@ -2097,6 +2109,13 @@ int64_t DLAssetWriter::_writeAndMerge(const string& index)
             //        __FUNCTION__, _cacheBytes, writerBytes, _requestPending);
             break;
         }
+
+        if ( _dataSource->isSurfaceSeek()) {
+            Logger::e(TAG, "%s break, _cacheBytes %lu, writerBytes %lld, seekMark  interrupted\n", 
+                    __FUNCTION__, _cacheBytes, writerBytes, seekMark);
+            break;
+        }
+
         
         pNode = *it;
         assert(pNode);
diff --git a/r2/r2/src/download/DLManager.cpp b/r2/r2/src/download/DLManager.cpp
index 735c722..6400922 100755
--- a/r2/r2/src/download/DLManager.cpp
+++ b/r2/r2/src/download/DLManager.cpp
@@ -14,6 +14,8 @@
 
 #include <CookieManager.h>
 
+extern bool seekMark;
+
 namespace dl {
 
 // ------------------------------------------------------------------------------
@@ -646,7 +648,7 @@ int64_t DLManager::seek(int64_t pos, int whence)
     if (curOff < 0) //error
         return curOff;
 
-    Logger::v(TAG, "seek pos %lld, whence %d, filesize %lld, curOff %lld\n", pos, whence, filesize, curOff);
+    Logger::d(TAG, "seek pos %lld, whence %d, filesize %lld, curOff %lld\n", pos, whence, filesize, curOff);
 
     if (AVSEEK_SIZE == whence)
         return filesize;
@@ -666,12 +668,14 @@ int64_t DLManager::seek(int64_t pos, int whence)
     int64_t hole_len = -1;
 
     assert(hole_pos > -1);
-    filesize = _writer->findFirstHole(_urlIndex, hole_pos, hole_len);
+    //if (!seekMark) { 
+        filesize = _writer->findFirstHole(_urlIndex, hole_pos, hole_len);
 
-    Logger::v(TAG, "DLManager::seek: want pos(%lld), whence %d, new hole pos %lld, len %lld, filesize %lld\n", pos, whence, hole_pos, hole_len, filesize);
+        Logger::d(TAG, "DLManager::seek: want pos(%lld), whence %d, new hole pos %lld, len %lld, filesize %lld\n", pos, whence, hole_pos, hole_len, filesize);
 
-    if (hole_len != 0 && seekFromDLTask(hole_pos, hole_len, filesize))
-        return -1;
+        if (hole_len != 0 && seekFromDLTask(hole_pos, hole_len, filesize))
+            return -1;
+    //}
 
     return pos;
 }
diff --git a/sdk-android/ApolloSDK/jni/com_UCMobile_Apollo_MediaPlayer.cpp b/sdk-android/ApolloSDK/jni/com_UCMobile_Apollo_MediaPlayer.cpp
index 38c75b5..d198bc1 100755
--- a/sdk-android/ApolloSDK/jni/com_UCMobile_Apollo_MediaPlayer.cpp
+++ b/sdk-android/ApolloSDK/jni/com_UCMobile_Apollo_MediaPlayer.cpp
@@ -76,6 +76,8 @@ turbo::Mutex g_errorlock;
 
 JavaVM *g_jvm;
 
+extern bool seekMark = false;
+
 // ------------------------------------------------------------------------------------------
 // Local helpers
 // ------------------------------------------------------------------------------------------
@@ -1198,8 +1200,9 @@ void MediaPlayerInstance::nativeSetSurface(JNIEnv* env, jobject mp, jobject surf
 
     if(surface != NULL && _platformData->getUseMediaCodec() == true && _isBuffering == false) {
         int64_t currentPosition = player->getPositionUs();
-        Logger::d(LOG_TAG, "nativeSetSurface seekTo currentPosition %lld \n", currentPosition);
-        player->seekTo(currentPosition);
+        Logger::e(LOG_TAG, "nativeSetSurface seekTo currentPosition %lld \n", currentPosition);
+        //seekMark = true;
+        player->seekToCurrentPosition(currentPosition);
     }
 
     
@@ -1499,7 +1502,7 @@ void MediaPlayerInstance::onBufferingUpdate(int percent)
 // thread: mediaplayer thread.
 void MediaPlayerInstance::onBufferingStateUpdate(bool start)
 {
-#ifdef DEBUG
+#if 1//def DEBUG
     Logger::d(LOG_TAG, "MediaPlayerInstance::onBufferingStateUpdate() %d\n", start);
 #endif
 
diff --git a/sdk-android/ApolloSDKTest/app/app.iml b/sdk-android/ApolloSDKTest/app/app.iml
index b2086ce..1eeb449 100644
--- a/sdk-android/ApolloSDKTest/app/app.iml
+++ b/sdk-android/ApolloSDKTest/app/app.iml
@@ -82,23 +82,17 @@
       <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/assets" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/blame" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/builds" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/bundles" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/dependency-cache" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/exploded-aar/u3player/jars" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-classes" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-runtime-classes" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-safeguard" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/incremental-verifier" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/instant-run-support" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/jniLibs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/manifests" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/pre-dexed" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/reload-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/res" />
-      <excludeFolder url="file://$MODULE_DIR$/build/intermediates/restart-dex" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/rs" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/shaders" />
       <excludeFolder url="file://$MODULE_DIR$/build/intermediates/symbols" />
diff --git a/sdk-android/ApolloSDKTest/app/src/main/java/com/example/videoviewtest/MainActivity.java b/sdk-android/ApolloSDKTest/app/src/main/java/com/example/videoviewtest/MainActivity.java
index 4724557..7b1009b 100644
--- a/sdk-android/ApolloSDKTest/app/src/main/java/com/example/videoviewtest/MainActivity.java
+++ b/sdk-android/ApolloSDKTest/app/src/main/java/com/example/videoviewtest/MainActivity.java
@@ -236,8 +236,8 @@ public class MainActivity extends Activity {
 		// Set URL edit
 		EditText urlEditText = (EditText)findViewById(R.id.url_field);
 
-        urlEditText.setText("https://r1---sn-5pguxacq-q5je.googlevideo.com/videoplayback?lmt1429513050650448&dur81.571&keyyt6&ip103.25.250.187&signature58DF200DE27006A5341CD0DB53AF1804CBF3973A.C80EC70A2CF14885C6B36E8F3237332FBA2A83E3&itag18&ido-AKls-iuCaoIWAbE0O16KNWxs75C_Y2U5gnDFXIH");
-		// urlEditText.setText("http://100.84.35.173:8080/t1Test_500k/super/index.m3u8");
+        //urlEditText.setText("https://r1---sn-5pguxacq-q5je.googlevideo.com/videoplayback?lmt1429513050650448&dur81.571&keyyt6&ip103.25.250.187&signature58DF200DE27006A5341CD0DB53AF1804CBF3973A.C80EC70A2CF14885C6B36E8F3237332FBA2A83E3&itag18&ido-AKls-iuCaoIWAbE0O16KNWxs75C_Y2U5gnDFXIH");
+		 urlEditText.setText("http://100.84.35.173:8080/t1Test/mp4/850_480_720Kbps_7793765.mp4");
 		//urlEditText.setText("http://pl.youku.com/playlist/m3u8?vid=356840185&type=mp4&ts=1451483155&keyframe=0&ep=eiaRG02FVc8F4CTbiT8bYiq2dnFeXP0P8BeBgdNqBdQmQO62&sid=84514831557411256d26a&token=2869&ctype=12&ev=1&oip=244858953");
 		//urlEditText.setText("http://pl.youku.com/playlist/m3u8?ts=1451389752&keyframe=0&vid=XMTQyODMwOTg0MA==&type=mp4&r=/3sLngL0Q6CXymAIiF9JUfR5MDecwxp/gSVk/o8apWJ3KUkaGrqktKh7cO9ZZoqYN5iGQUM9dNrj6YzDV+fl4Ojn+ylzMvuNIjNMLNAk7kLfzn4WXk/wjulKJsKt1jTGRWU/E6WoAv1iuQ4racC3f/cRWL+h4c7lh2D5a5TeR6Q4J7r/Rnw6/1o05uZxG8BS&oip=738103351&sid=44513897524752007f23e&token=1907&did=9e07af0e81bab3129afcb614de22673c&ev=1&ctype=20&ep=8KY5bm4jLPbm3IonQ1%2F4xHbYCoXHbXYvz78pHS%2FgyKo6nlH4fcJJTNkwQfBvi40W");
         //urlEditText.setText("http://119.147.178.71/161/17/24/letv-uts/14/ver_00_22-1015165368-avc-420407-aac-32039-102600-5890160-dc5485b0e58783e68e3d8e0d99c153ca-1451357626810.m3u8?crypt=7aa7f2e137&b=458&nlh=3072&nlt=45&bf=24&p2p=1&video_type=mp4&termid=2&tss=ios&geo=CN-19-246-1&platid=3&splatid=304&its=0&qos=4&fcheck=0&mltag=1&proxy=2006169159,244864603,3683272586&uid=244855964.rp&keyitem=GOw_33YJAAbXYE-cnQwpfLlv_b2zAkYctFVqe5bsXQpaGNn3T1-vhw..&ntm=1451583000&nkey=a553e4efb437b227218cdfbed30f5da9&nkey2=9caf9460fbb3de47ae2381eaa605aaad&p1=0&payff=0&ostype=android&cvid=621117487230&g3proxy_tm=1451564400&playid=0&vid=24295058&g3proxy_ercode=0&hwtype=un&uip=14.152.64.76&vtype=13&tm=1451564414&mmsid=40654791&uuid=1564413445397367&p2=06&key=06961cf06047fbe5ff439fa99a41de85&errc=0&gn=831&buss=4701&cips=14.152.64.76");   
-- 
1.9.1

